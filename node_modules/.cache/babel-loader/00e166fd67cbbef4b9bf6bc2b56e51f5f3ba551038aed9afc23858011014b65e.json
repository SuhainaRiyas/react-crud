{"ast":null,"code":"var _jsxFileName = \"C:\\\\React applications\\\\react-crud-app\\\\src\\\\Pagination.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pagination = _ref => {\n  _s();\n  let {\n    nPages,\n    currentPage,\n    setCurrentPage\n  } = _ref;\n  // const pageNumbers = [...Array(nPages + 1).keys()].slice(1)\n\n  // const nextPage = () => {\n  //         if(currentPage !== nPages) setCurrentPage(currentPage + 1)\n  // }\n  // const prevPage = () => {\n  //     if(currentPage !== 1) setCurrentPage(currentPage - 1)\n  // }\n  // return (\n  //     <nav>\n  //         <ul className='pagination justify-content-center'>\n  //             <li className=\"page-item\">\n  //                 <a className=\"page-link\" \n  //                     onClick={prevPage} \n  //                    >\n\n  //                     Previous\n  //                 </a>\n  //             </li>\n  //             {pageNumbers.map(pgNumber => (\n  //                 <li key={pgNumber} \n  //                     className= {`page-item ${currentPage == pgNumber ? 'active' : ''} `} >\n\n  //                     <a onClick={() => setCurrentPage(pgNumber)}  \n  //                         className='page-link' \n  //                         >\n\n  //                         {pgNumber}\n  //                     </a>\n  //                 </li>\n  //             ))}\n  //             <li className=\"page-item\">\n  //                 <a className=\"page-link\" \n  //                     onClick={nextPage}\n  //                    >\n\n  //                     Next\n  //                 </a>\n  //             </li>\n  //         </ul>\n  //     </nav>\n  //)\n\n  const numOfPages = [];\n  for (let i = 1; i <= pages; i++) {\n    numOfPages.push(i);\n  }\n  const [currentButton, setCurrentButton] = useState(1);\n  useEffect(() => {\n    setCurrentPage(currentButton);\n  }, [currentButton, setCurrentPage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clearfix\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: `${currentButton === 1 ? 'page-item disabled' : 'page-item'}`,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#!\",\n          onClick: () => setCurrentButton(prev => prev === 1 ? prev : prev - 1),\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 92\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), numOfPages.map((page, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `${currentButton === page ? 'page-item active' : 'page-item'}`,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#!\",\n            className: \"page-link\",\n            onClick: () => setCurrentButton(page),\n            children: page\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 113\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `${currentButton === numOfPages.length ? 'page-item disabled' : 'page-item'}`,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#!\",\n          onClick: () => setCurrentButton(next => next === numOfPages.length ? next : next + 1),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 96\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(Pagination, \"rMhbvTUqK9CHvyRMkvcEfpnB/FI=\");\n_c = Pagination;\nexport default Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Pagination","_ref","_s","nPages","currentPage","setCurrentPage","numOfPages","i","pages","push","currentButton","setCurrentButton","useState","useEffect","className","children","href","onClick","prev","fileName","_jsxFileName","lineNumber","columnNumber","map","page","index","length","next","_c","$RefreshReg$"],"sources":["C:/React applications/react-crud-app/src/Pagination.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst Pagination = ({ nPages, currentPage, setCurrentPage }) => {\r\n\r\n    // const pageNumbers = [...Array(nPages + 1).keys()].slice(1)\r\n\r\n    // const nextPage = () => {\r\n    //         if(currentPage !== nPages) setCurrentPage(currentPage + 1)\r\n    // }\r\n    // const prevPage = () => {\r\n    //     if(currentPage !== 1) setCurrentPage(currentPage - 1)\r\n    // }\r\n    // return (\r\n    //     <nav>\r\n    //         <ul className='pagination justify-content-center'>\r\n    //             <li className=\"page-item\">\r\n    //                 <a className=\"page-link\" \r\n    //                     onClick={prevPage} \r\n    //                    >\r\n                        \r\n    //                     Previous\r\n    //                 </a>\r\n    //             </li>\r\n    //             {pageNumbers.map(pgNumber => (\r\n    //                 <li key={pgNumber} \r\n    //                     className= {`page-item ${currentPage == pgNumber ? 'active' : ''} `} >\r\n\r\n    //                     <a onClick={() => setCurrentPage(pgNumber)}  \r\n    //                         className='page-link' \r\n    //                         >\r\n                            \r\n    //                         {pgNumber}\r\n    //                     </a>\r\n    //                 </li>\r\n    //             ))}\r\n    //             <li className=\"page-item\">\r\n    //                 <a className=\"page-link\" \r\n    //                     onClick={nextPage}\r\n    //                    >\r\n                        \r\n    //                     Next\r\n    //                 </a>\r\n    //             </li>\r\n    //         </ul>\r\n    //     </nav>\r\n    //)\r\n\r\n    const numOfPages = [];\r\n\r\n    for (let i=1; i <= pages; i++) {\r\n        numOfPages.push(i);\r\n    }\r\n\r\n    const [currentButton, setCurrentButton] = useState(1);\r\n\r\n    useEffect(() => {\r\n        setCurrentPage(currentButton);\r\n    }, [currentButton, setCurrentPage])\r\n\r\n    return (\r\n        <div className=\"clearfix\">\r\n        <ul className=\"pagination\">\r\n            <li className={`${currentButton === 1 ? 'page-item disabled' : 'page-item' }`}><a href=\"#!\"\r\n                onClick = { () => setCurrentButton((prev) => prev === 1 ? prev : prev - 1)}\r\n            >Previous</a></li>\r\n{\r\n            numOfPages.map((page, index) => {\r\n                return (\r\n                    <li key={index} className={`${currentButton === page ? 'page-item active' : 'page-item' }`}><a href=\"#!\" className=\"page-link\"\r\n                        onClick = {()=>setCurrentButton(page)}\r\n                    >{page}</a></li> \r\n                )\r\n            })\r\n\r\n}\r\n\r\n<li className={`${currentButton === numOfPages.length ? 'page-item disabled' : 'page-item' }`}><a href=\"#!\"\r\n                onClick = { () => setCurrentButton((next) => next === numOfPages.length ? next : next + 1)}\r\n            >Next</a></li>\r\n        </ul>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Pagination"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}